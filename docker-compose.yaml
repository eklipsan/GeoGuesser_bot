version: '3.1'

services:
  bot:
    container_name: gucotomap_bot
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - BOT_TOKEN=6905062343:AAGn8bhe62uqj4ha2mtk8cAbn46GgUa0R5M # Insert your bot token here
      - API_KEY_MAP=35fb72ea-731e-47b6-ab4a-5266884326bf # This api key is working, you can leave it as it is
      - ADMIN_IDS=2050893395,1050893395 # Insert telegram user id, that should be administrators of the bot
      # Logging parameters
      # Turn on/off console logging. Enter either 1 or 0
      - LOG_CONSOLE_ON=1
      # Turn on/off file logging. Enter either 1 or 0
      - LOG_FILE_ON=1
      # Specify filepath for file logging. For example, /home/user/test.log
      - LOG_FILEPATH=gucotomap_journal.log
      # Specify level info of logging. Enter only integer values!
      # Debug (10) - the lowest level, intended for debugging messages and output of diagnostic information about the application.
      # Info (20) - the level for outputting data about code fragments that work as expected.
      # Warning (30) - a level for outputting warnings and recording information about events to which the programmer usually pays attention.
      # Error (40) - a level for outputting information about errors, that a part of the application does not work as expected.
      # Critical (50) - a level for outputting information about very serious errors that threaten the normal functioning of the entire application.
      - LOG_LEVEL_INFO_CONSOLE=10
      - LOG_LEVEL_INFO_FILE=10
    networks:
      - gucotomap_net
    restart: always
    depends_on:
      mongo:
          condition: service_healthy

  mongo:
    container_name: gucotomap_db
    image: mongo
    environment:
      # You should not change these values
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: supersecretpassword
    ports:
      - 27017:27017
    volumes:
      - gucotomap_data:/data/db
    restart: always
    networks:
      - gucotomap_net
    healthcheck:
      test: ps -edaf | grep mongo | grep -v grep
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 10s

  mongo-express:
    container_name: gucotomap_web
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      # You should not change these values
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
      ME_CONFIG_MONGODB_URL: mongodb://admin:supersecretpassword@mongo:27017/
    restart: unless-stopped
    networks:
      - gucotomap_net
    depends_on:
      mongo:
        condition: service_healthy


networks:
  gucotomap_net:
    driver: bridge

volumes:
  gucotomap_data: